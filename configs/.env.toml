[application]
name = "media-search"
google_project_id = ""
location = "us-central1"
thread_pool_size = 10

[big_query_data_source]
dataset = "media_ds"
media_table = "media"
embedding_table = "segment_embeddings"

[topic_subscriptions."HiResTopic"]
name = "media_high_res_resources_subscription"
dead_letter_topic = "media_high_res_events_dead_letter"
timeout_in_seconds = 10

[topic_subscriptions."LowResTopic"]
name = "media_low_res_resources_subscription"
dead_letter_topic = "media_low_res_events_dead_letter"
timeout_in_seconds = 10

[topic_subscriptions."ConfigTopic"]
name = "media_config_update_events_subscription"
dead_letter_topic = ""
timeout_in_seconds = 300

[storage]
hires_input_bucket = ""
lowres_output_bucket = ""
gcs_fuse_mount_point = "/mnt"

[embedding_models.multi-lingual]
model = "text-embedding-005"
MaxRequestsPerMinute = 100

[embedding_models.en-us]
model = "text-embedding-005"
MaxRequestsPerMinute = 100

[agent_models.creative-flash]
model = "gemini-2.5-flash"
temperature = 0.8
top_p = 0.5
top_k = 30
max_tokens = 65535
system_instructions = """
Your role is a film, and media trailer official capable of describing
in detail directors, producers, cinematographers, screenwriters, and actors.
In addition, you're able to summarize plot points, identify segment time stamps
and recognize which actor is playing which character, and which character is in each segment.
"""
output_format = "application/json"
rate_limit = 65535

[agent_models."creative-pro"]
model = "gemini-2.5-flash"
temperature = 0.8
top_p = 0.5
top_k = 30
max_tokens = 65535
output_format = "application/json"
enable_google = true
rate_limit = 100

[agent_models."critical-flash"]
model = "gemini-2.5-flash"
temperature = 0.2
top_p = 0.5
top_k = 30
max_tokens = 65535
output_format = "application/json"
rate_limit = 200

[agent_models."critical-pro"]
model = "gemini-2.5-flash"
temperature = 0.2
top_p = 0.5
top_k = 30
max_tokens = 65535
output_format = "application/json"
enable_google = true
rate_limit = 200


[categories.trailer]
name = "Trailer"
definition = "A short advertisement or clip of a single movie"
system_instructions = ""
summary = ""
segment = ""

[categories."trailer_comp"]
name = "Tailer Composition"
definition = "A collection of multiple trailers for different movies"
system_instructions = ""

[categories.movie]
name = "Movie"
definition = "A feature length film"
system_instructions = ""

[categories.news]
name = "News"
definition = "A news clip and/or news broadcast"
system_instructions = ""

[categories.sports]
name = "Sports"
definition = "A feature length sporting event that may or may not include commercials"
system_instructions = ""

# Below this line are prompt template definitions
[prompt_templates.trailer]
system_instructions = """
Your role is a film, and media trailer official capable of describing
in detail directors, producers, cinematographers, screenwriters, and actors.
In addition, you're able to summarize plot points, identify segment time stamps
and recognize which actor is playing which character, and which character is in each segment.
"""
summary = """Review the attached media file and extract the following information
- Title as title
- Lower case category name as category from one of the following categories and definitions:
    - {{ .CATEGORIES }}
- Summary - a detailed summary of the media contents, plot, and cinematic themes in markdown format
- Length in Seconds as length_in_seconds,
- Media URL as media_url
- Director as director
- Release Year as release_year, a four digit year
- Genre as genre
- Rating as rating with one of the following values: G, PG, PG-13, R, NC-17
- Cast as cast, an array of Cast Members including Character Name as character_name, and associated actor name as actor_name
- Extract the segments based on their narrative and visual coherence, ordering them by start and end times. The primary goal is to create segments that feel natural and complete.
    - A segment consists of continuous action or dialogue in a single location. A segment break MUST occur at a logical transition point, such as:
        - A change in location.
        - A significant jump forward or backward in time.
        - The start/end of a major conversation or action sequence.
    - Crucially, DO NOT end a segment abruptly. Avoid cutting in the middle of a continuous camera shot (a single take) or in the middle of a spoken sentence.
    While segments must have a minimum length of 10 seconds, their duration should be determined by the content. Prioritize logical, coherent segmentation over adhering to any specific length.
    - The sequence of segments must be continuous and cover the entire video from start to finish without any gaps. The total length of the video is {{ .VIDEO_LENGTH }} seconds.
    - The first segment must start at 00:00:00.
    - The end of one segment must be the exact start of the next segment.
    - The end time of the final segment must be the total duration of the video.
    - Add a sequence number to each segment starting from 1 and incrementing in order of the timestamp.

**Timestamp Formatting and Logic Rules:**
- All `start` and `end` timestamps must be strings formatted as "HH:MM:SS", with each component zero-padded to two digits. Values must be calculated correctly; for example, a moment 119 seconds into a video is "00:01:59", not "01:19:00".
- All timestamps must be logical and fall within the video's total duration. A video that is 1 minute and 59 seconds long cannot have a timestamp of "00:02:00" or greater.
- For any given segment, the `end` timestamp must always be chronologically after its `start` timestamp.

Example Output Format:
{{ .EXAMPLE_JSON }}
"""

segment = """Given the following media file, summary, actors, and characters, extract the following details for the time segment {{ .TIME_START }} - {{ .TIME_END }} in a valid JSON format.
The given time segement timestamps are in the format of HH:MM:SS or hours:minutes:seconds.
**Extraction Details:**
- sequence_number: {{ .SEQUENCE }} as a number
- start: {{ .TIME_START }} as a string
- end: {{ .TIME_END }} as a string
- script: write a detailed segment description that includes colors, action sequences, dialogue with both character and actor citations, any products or brand names, and lastly any significant props, in plain text.

**IMPORTANT FALLBACK INSTRUCTION:**
If you are unable to generate a detailed segment description from the video segment (for example, if the segment is too short, lacks distinct action, or has no dialogue), you MUST provide a default segment extraction. For this default segment, use the provided 'Media Summary' as the content for the 'script' field. The 'start' and 'end' times should still match the provided time frame {{ .TIME_START }} - {{ .TIME_END }}.

Media Summary:
{{ .SUMMARY_DOCUMENT }}

Example Output:
{{ .EXAMPLE_JSON }}"""

# Below this line are prompt template definitions
[prompt_templates.sports]
system_instructions = """
Your role is a professional sports analyst and commentator capable of describing
in detail teams, players, coaches, and key officials. In addition, you're able to
summarize key plays and highlights, identify game-changing moments and their timestamps,
and recognize which player is involved in each play, track game statistics (like scores and penalties),
and describe team strategies or formations.
"""
summary = """
Review the attached media file and extract the following information:

- Title as title (e.g., "Super Bowl LVII: Chiefs vs. Eagles")
- Summary as summary - a detailed summary of the game's progression, key plays, standout performances, and final outcome in markdown format
- Head Coaches as director, an array of the head coaches for the competing teams
- Event Year as release_year, a four-digit year
- Sport as genre (e.g., "Football", "Basketball", "Soccer")
- Event Significance as rating (e.g., "Championship Final", "Regular Season", "Exhibition Match")
- Key Players as cast, an array of notable players including their position as character_name, and their name as actor_name
- Extract and segment the event into a sequence of coherent plays and distinct action segments, ordering them by start and end times. The primary goal is to create segments that capture a complete play or a continuous period of action.
    - A segment break MUST occur at a natural stopping point in the game. Examples include:
        - A whistle blowing to end a play.
        - A scoring event (a goal, touchdown, basket, etc.).
        - A significant stoppage like a timeout, foul, or injury.
        - A transition to a replay, slow-motion analysis, or a cut to the commentators.
    - Crucially, DO NOT end a segment in the middle of a continuous play (e.g., while the ball is in the air or a player is running) or during an unfinished sentence from a commentator.
    - While segments must have a minimum length of 10 seconds, their duration should be determined by the natural flow of the game. Prioritize logical, event-based segmentation over adhering to any specific length.
    - The sequence of segments must be continuous and cover the entire video from start to finish without any gaps. The total length of the video is {{ .VIDEO_LENGTH }} seconds.
    - The first segment must start at 00:00:00.
    - The end time of one segment must be the exact start time of the next segment.
    - The end time of the final segment must be the total duration of the video.
    - Add a sequence number to each segment starting from 1 and incrementing in order of the timestamp.

**Timestamp Formatting and Logic Rules:**
- All `start` and `end` timestamps must be strings formatted as "HH:MM:SS", with each component zero-padded to two digits. Values must be calculated correctly; for example, a moment 119 seconds into a video is "00:01:59", not "01:19:00".
- All timestamps must be logical and fall within the video's total duration. A video that is 1 minute and 59 seconds long cannot have a timestamp of "00:02:00" or greater.
- For any given segment, the `end` timestamp must always be chronologically after its `start` timestamp.

Example Output Format:
{{ .EXAMPLE_JSON }}
"""
segment = """Given the following media file, summary, and player details, extract the following details for the time segment {{ .TIME_START }} - {{ .TIME_END }} in a valid JSON format.
The given time segement timestamps are in the format of HH:MM:SS or hours:minutes:seconds.
**Extraction Details:**
- sequence_number: {{ .SEQUENCE }} as a number
- start: {{ .TIME_START }} as a string
- end: {{ .TIME_END }} as a string
- script: write a detailed description of the play or action that includes team/jersey colors, a play-by-play of the action sequence with citations of the key players involved, any audible commentary from the announcers, visible products or brand names (e.g., on jerseys, stadium banners), and any significant sports equipment involved (e.g., ball, puck, goal), in plain text.

**IMPORTANT FALLBACK INSTRUCTION:**
If you are unable to generate a detailed segment description from the video segment (for example, if the segment is too short, lacks distinct action, or has no dialogue), you MUST provide a default segment extraction. For this default segment, use the provided 'Media Summary' as the content for the 'script' field. The 'start' and 'end' times should still match the provided time frame {{ .TIME_START }} - {{ .TIME_END }}.

Media Summary:
{{ .SUMMARY_DOCUMENT }}

Example Output:
{{ .EXAMPLE_JSON }}
"""

[content_type]
types = ["trailer", "sports"]
default_type = "trailer"
prompt_template = """Analyze the content of the provided media file and determine its primary content type from the list below.
Your response must be one of the provided values, with an exact match. For the task it is enough to only analyze the first 30 seconds of the media file.

Available content types: {{ .CONTENT_TYPES }}

Do not add any other text, explanation, or formatting to your response. Only output the determined content type."""