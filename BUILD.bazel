# Copyright 2024 Google, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author: rrmcguinness (Ryan McGuinness)

load("@bazel_gazelle//:def.bzl", "gazelle")
load("@rules_multirun//:defs.bzl", "command", "multirun")
load("//:build/copy_file_groups.bzl", "copy_file_groups")

gazelle(name = "gazelle")
# gazelle:prefix github.com/GoogleCloudPlatform/solutions/media

config_setting(
    name = "linux_x86_64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

config_setting(
    name = "linux_arm",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:arm",
    ],
)

config_setting(
    name = "apple_silicon",
    constraint_values = [
        "@platforms//os:osx",
        "@platforms//cpu:aarch64",
    ],
)

config_setting(
    name = "apple_legacy",
    constraint_values = [
        "@platforms//os:osx",
        "@platforms//cpu:x86_64",
    ],
)

copy_file_groups(
    name = "copy_ffmpeg",
    srcs = select({
        ":apple_legacy": [
            "//third_party/ffmpeg/darwin_arm64:ffmpeg_export",
        ],
        ":apple_silicon": [
            "//third_party/ffmpeg/darwin_arm64:ffmpeg_export",
        ],
        ":linux_arm": [
            "//third_party/ffmpeg/linux_arm64:ffmpeg_export",
        ],
        ":linux_x86_64": [
            "//third_party/ffmpeg/linux_x86_64:ffmpeg_export",
        ],
    }),
    prefix = "bin",
    visibility = ["//visibility:public"],
)

command(
    name = "site",
    arguments = [
        "preview",
        "--port",
        "4000",
        "--mode",
        "dev",
    ],
    command = "//web/apps/media-search:start",
)

command(
    name = "services",
    command = "//web/apps/api_server",
    data = [
        "//:copy_ffmpeg",
        "//configs:.env.local.toml",
        "//configs:.env.toml",
    ],
)

multirun(
    name = "demo",
    commands = [
        ":services",
        ":site",
    ],
    jobs = 0,
)
